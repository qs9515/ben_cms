<?php
/**
 *
 * 文件说明: 文章管理
 *
 * Created by PhpStorm.
 * User: qs9515
 * Date: 2019/8/18
 * Time: 17:57
 *
 * $Id$
 * $LastChangedDate$
 * $LastChangedRevision$
 * $LastChangedBy$
 */
namespace application\admin\controller;
use application\admin\controller\baseController;
use application\admin\models\articleModel;
use application\admin\models\baseModel;
use application\admin\validate\articleValidate;
use core\conf;
use library\upload;
use Overtrue\Pinyin\Pinyin;

class articleController extends baseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * 方法名称:sortListAction
     * 说明: 分类列表
     * @throws \SmartyException
     */
    public function sortListAction()
    {
        $search=array();
        $search['keyword']=$this->_request->getParam('keyword');
        $data=parent::_list("ben_sort",BASE_PATH.'admin/article/sortList/page/(:num)/',$search,"updated desc",array('sort_name','sort_info'));
        $this->view->assign('data',$data);
        $this->view->display('admin/article/sort_list.html');
    }

    /**
     * 方法名称:sortEditAction
     * 说明: 添加修改分类展示
     */
    public function sortEditAction()
    {
        $uuid=$this->_request->getParam('ids');
        $uuid=is_array($uuid)?(isset($uuid[0])?$uuid[0]:''):$uuid;
        if($uuid)
        {
            if(baseModel::commCount("ben_sort",array('id'=>$uuid)))
            {
                $this->view->assign('data',baseModel::commGetDetailById("ben_sort",$uuid));
            }
            else
            {
                $this->show_message('参数传递失败！');
            }
        }
        $this->view->display('admin/article/sort_edit.html');
    }

    /**
     * 方法名称:sortSaveAction
     * 说明: 添加、修改保存分类
     */
    public function sortSaveAction()
    {
        $save_data['sort_name']=articleValidate::isMust('sort_name',$this->_request,"分类名称不能为空！");
        $save_data['sort_pinyin']=$this->_request->getParam('sort_pinyin');
        $save_data['sort_key']=$this->_request->getParam('sort_key');
        $save_data['sort_key']=$save_data['sort_key']?str_replace(array('。','.',';','；','|','-',':',"：",'!','！','?','？'),',',$save_data['sort_key']):$save_data['sort_key'];
        $save_data['sort_info']=$this->_request->getParam('sort_info');
        $save_data['sort_menu']=articleValidate::defaultStatus('sort_menu',$this->_request);
        $id=$this->_request->getParam('id');
        $save_data['updated']=date('Y-m-d H:i:s');
        $data['code']='500';
        $data['msg']='保存失败！';
        if($id)
        {
            articleValidate::isDbExist('ben_sort',array("sort_name"=>$save_data["sort_name"]),'分类名称已存在',"id != $id");
            if(baseModel::commEdit('ben_sort',$save_data,array('id'=>$id)))
            {
                $data['code']='200';
                $data['msg']='修改分类信息成功！';
                json($data,$data['code']);
            }
            else
            {
                $data['msg']='修改分类信息失败！';
                json($data,$data['code']);
            }
        }
        else
        {
            $save_data['created']=$save_data['updated'];
            if($save_data['sort_pinyin']=='')
            {
                $pinyin = new Pinyin('Overtrue\Pinyin\MemoryFileDictLoader');
                $save_data['sort_pinyin']=$pinyin->abbr($save_data['sort_name']);
            }
            if(baseModel::commAdd('ben_sort',$save_data))
            {
                $data['code']='200';
                $data['msg']='新增分类信息成功！';
                json($data,$data['code']);
            }
            else
            {
                $data['msg']='新增分类信息失败！';
                json($data,$data['code']);
            }
        }
    }

    /**
     * 方法名称:sortStatusAction
     * 说明:设置导航状态
     */
    public function sortStatusAction()
    {
        $data['code']='500';
        $data['msg']='删除记录失败！';
        $uuid=$this->_request->getParam('ids');
        if(!is_array($uuid))
        {
            $uuid=array($uuid);
        }
        if(!empty($uuid))
        {
            $succ=0;
            $error=0;
            foreach ($uuid as $k=>$v)
            {
                $basic=baseModel::commGetDetailById('ben_sort',$v);
                if($basic!==false)
                {
                    $new_status=$basic->sort_menu==1?2:1;
                    if(baseModel::commEdit('ben_sort',array('sort_menu'=>$new_status),array('id'=>$v)))
                    {
                        $succ++;
                    }
                    else
                    {
                        $error++;
                    }
                }
                else
                {
                    $error++;
                    continue;
                }
            }
            $data['code']='200';
            $data['msg']='修改完成，其中成功【'.$succ.'】条，失败【'.$error.'】条！';
        }
        else
        {
            $data['msg']='参数为空，修改失败！';
        }
        json($data,$data['code']);
    }

    /**
     * 方法名称:sortDeleteAction
     * 说明:删除分类
     */
    public function sortDeleteAction()
    {
        $uuid=$this->_request->getParam('ids');
        $data=parent::_delete("ben_sort",$uuid,array('ben_article_base'),array('ben_article_base'=>'sort_id'));
        json($data,$data['code']);
    }

    /**
     * 方法名称:artListAction
     * 说明: 文章列表
     * @throws \SmartyException
     */
    public function artListAction()
    {
        $search=array();
        $search['keyword']=$this->_request->getParam('keyword');
        $data=parent::_list("ben_article_base",BASE_PATH.'admin/article/artList/page/(:num)/',$search,"updated desc",array('title','keyword','info'));
        $this->view->assign('data',$data);
        $this->view->display('admin/article/article_list.html');
    }

    /**
     * 方法名称:artEditAction
     * 说明: 添加、修改文章呈现
     * @throws \SmartyException
     */
    public function artEditAction()
    {
        $uuid=$this->_request->getParam('ids');
        $uuid=is_array($uuid)?(isset($uuid[0])?$uuid[0]:''):$uuid;
        if($uuid)
        {
            if(baseModel::commCount("ben_article_base",array('id'=>$uuid)))
            {
                $this->view->assign('data',baseModel::commGetDetailById("ben_article_base",$uuid));
                $this->view->assign('data_detail',articleModel::getContentByAid($uuid));
            }
            else
            {
                $this->show_message('参数传递失败！');
            }
        }
        $this->view->assign('sorts',baseModel::commList('ben_sort',0,100,array(),'sort_pinyin desc'));
        $this->view->display('admin/article/article_edit.html');
    }

    /**
     * 方法名称:picUploadAction
     * 说明: 图片上传处理
     * @throws \Exception
     */
    public function picUploadAction()
    {
        $uploader=new upload(array('allowTypes'=>array('jpg','png','gif','bmp'),'uploadPath'=>conf::get('system.upload_dir').'/article/'.date('Ymd')));
        $files=$uploader->fileUpload($_FILES['imgFile']);
        if($files!==false)
        {
            //校验图片是否包含PHP代码
            $str=file_get_contents($files);
            if(preg_match('~<\?php~Uis',$str)!==0)
            {
                unlink($files);
                $data['message']='文件检测到非法代码，您的相关信息已被记录并通知管理员处理！';
                $data['error']=1;
                json($data);
            }
            else
            {
                $file_uri=str_replace(__SITEROOT.'/public',"",$files);
                //删除未处理文件
                $tmp_file=S('article_file_uri');
                if(is_file(__SITEROOT.'/public'.$tmp_file))
                {
                    @unlink(__SITEROOT.'/public'.$tmp_file);
                }
                S('article_file_uri',$file_uri);
                //写入数据库
                $create_data['attach_uri']=$file_uri;
                $create_data['status']=2;
                articleModel::addAttachment($create_data);
                $data['error']=0;
                $data['url']=$file_uri;
                json($data);
            }
        }
        else
        {
            $errors=$uploader->getStatus();
            $data['message']=$errors['message'];
            $data['error']=1;
            json($data);
        }
    }

    /**
     * 方法名称:artSaveAction
     * 说明: 保存文章
     * @throws \library\exception\ValidateException
     */
    public function artSaveAction()
    {
        $save_data['title']=articleValidate::isMust('title',$this->_request,"文章标题不能为空！");
        $save_data['sort_id']=articleValidate::isMust('sort_id',$this->_request,"文章分类不能为空！");
        $save_data['content']=articleValidate::isMust('content',$this->_request,"文章内容不能为空！");
        $save_data['status']=articleValidate::defaultStatus('status',$this->_request);
        $id=$this->_request->getParam('id');
        $save_data['updated']=date('Y-m-d H:i:s');
        $save_data['uri']=$this->_request->getParam('uri');
        $save_data['author']=$this->_request->getParam('author');
        $save_data['author']=$save_data['author']?$save_data['author']:S('user_token');
        //文章描述
        $save_data['info']=$this->_request->getParam('info');
        if($save_data['info']=='')
        {
            $save_data['info']=mb_substr(strip_tags(htmlspecialchars_decode($save_data['content'])),0,128);
        }
        //关键字
        $save_data['keyword']=$this->_request->getParam('keyword');
        if($save_data['keyword']=='')
        {
            $tmp_key=self::_getKey($save_data['title']);
            if (isset($tmp_key['msg']) && isset($tmp_key['code']) && $tmp_key['code']=='200')
            {
                $save_data['keyword']=$tmp_key['msg'];
            }
        }
        if($save_data['keyword'])
        {
            $tmp_data=explode(',',$save_data['keyword']);
            $tags=articleModel::addTags($tmp_data);
        }
        //标题图片
        $save_data['head_pic']=S('article_file_uri');
        if($save_data['head_pic']=='')
        {
            //下载网络图片
            preg_match_all('~<img(.+)>~Uis',htmlspecialchars_decode($save_data['content']),$res);
            if(isset($res[1]))
            {
                foreach ($res[1] as $k=>$v)
                {
                    preg_match_all('~src=[\'|"]([^\']|[^"]+)[\'|"]~',$v,$new);
                    if (isset($new[1][1]) && $new[1][1]!='')
                    {
                        if (strpos($new[1][1],'http')!==false)
                        {
                            //下载远程图片
                            $content = file_get_contents($new[1][1]);
                            $ext=pathinfo(parse_url($new[1][1], PHP_URL_PATH ),PATHINFO_EXTENSION);
                            $ext=$ext?$ext:'jpg';
                            $new[1][1]=conf::get('system.upload_dir').'/article/'.date('Ymd').'/'.md5(time()).'.'.$ext;
                            file_put_contents($new[1][1], $content);
                        }
                        $save_data['head_pic']=$new[1][1];
                        continue;
                    }
                }
            }
        }
        if ($id)
        {
            //修改
            if(articleModel::articleEdit($save_data,array('id'=>$id)))
            {
                if (is_array($tags) && !empty($tags))
                {
                    articleModel::addArticleTags($id,$tags);
                }
                if ($save_data['head_pic'])
                {
                    articleModel::editAttachementStatus($save_data['head_pic']);
                }
                $data['code']='200';
                $data['msg']='修改文章信息成功！';
                json($data,$data['code']);
            }
            else
            {
                $data['msg']='修改文章信息失败！';
                json($data,$data['code']);
            }
        }
        else
        {
            //新增
            $save_data['publish_date']=$save_data['created']=$save_data['updated'];
            $aid=articleModel::articleAdd($save_data);
            if ($aid)
            {
                if (is_array($tags) && !empty($tags))
                {
                    articleModel::addArticleTags($aid,$tags);
                }
                if($save_data['head_pic'])
                {
                    articleModel::editAttachementStatus($save_data['head_pic']);
                }
                $data['code']='200';
                $data['msg']='新增文章信息成功！';
                json($data,$data['code']);
            }
            else
            {
                $data['msg']='新增文章信息失败！';
                json($data,$data['code']);
            }
        }
    }

    /**
     * 方法名称:artDeleteAction
     * 说明: 删除文章
     */
    public function artDeleteAction()
    {
        $uuid=$this->_request->getParam('ids');
        $data=articleModel::articleDelete($uuid);
        json($data,$data['code']);
    }

    /**
     * 方法名称:artDetailAction
     * 说明: 查看文章详细
     * @throws \SmartyException
     */
    public function artDetailAction()
    {
        $uuid=$this->_request->getParam('ids');
        $uuid=is_array($uuid)?(isset($uuid[0])?$uuid[0]:''):$uuid;
        if(baseModel::commCount("ben_article_base",array('id'=>$uuid)))
        {
            $this->view->assign('data',articleModel::getArticleDetail($uuid));
        }
        else
        {
            $this->show_message('参数传递失败！');
        }
        $this->view->display('admin/article/article_detail.html');
    }

    /**
     * 方法名称:tagListAction
     * 说明: tags列表
     * @throws \SmartyException
     */
    public function tagListAction()
    {
        $search=array();
        $search['keyword']=$this->_request->getParam('keyword');
        $data=parent::_list("ben_tags",BASE_PATH.'admin/article/tagList/page/(:num)/',$search,"updated desc",array('tag_name','tag_pinyin'));
        if(!empty($data))
        {
            foreach ($data as $k=>$v)
            {
                $data[$k]['count']=baseModel::commCount('ben_tag_article',array('tid'=>$v['id']));
            }
        }
        $this->view->assign('data',$data);
        $this->view->display('admin/article/tag_list.html');
    }

    /**
     * 方法名称:tagDeleteAction
     * 说明: tags删除
     * @throws \Exception
     */
    public function tagDeleteAction()
    {
        $uuid=$this->_request->getParam('ids');
        $data=articleModel::tagDelete($uuid);
        json($data,$data['code']);
    }
}